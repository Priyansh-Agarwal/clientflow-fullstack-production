{
  "name": "ClientFlow — Booking & Reschedule (SMS/Email → Calendar)",
  "nodes": [
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            { "name": "API_BASE_URL", "value": "https://YOUR-API-DOMAIN.com/api" },
            { "name": "ORG_ID", "value": "REPLACE_WITH_ORG_UUID" },
            { "name": "AUTH_TOKEN", "value": "Bearer REPLACE_WITH_PERSONAL_ORG_TOKEN" },
            { "name": "STRIPE_WEBHOOK_SECRET", "value": "whsec_REPLACE" },
            { "name": "SLACK_WEBHOOK_URL", "value": "https://hooks.slack.com/services/REPLACE" }
          ]
        }
      },
      "id": "setEnv",
      "name": "Set ENV",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [240, 180]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "clientflow/bookings",
        "responseMode": "lastNode",
        "options": { "binaryParser": "stream" }
      },
      "id": "webhookIn",
      "name": "Webhook (Inbound)",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [40, 180],
      "webhookId": "clientflow-bookings"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.API_BASE_URL}}/automations/sms_inbound",
        "jsonParameters": true,
        "options": {},
        "headerParametersJson": "[{\"name\":\"Authorization\",\"value\":\"={{$json.AUTH_TOKEN}}\"}]",
        "queryParametersJson": "[{\"name\":\"orgId\",\"value\":\"={{$json.ORG_ID}}\"}]",
        "bodyParametersJson": "={  $json }"
      },
      "id": "forwardToApi",
      "name": "Forward to API (/automations/sms_inbound)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [440, 180]
    },
    {
      "parameters": {
        "authentication": "none",
        "requestMethod": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "jsonParameters": true,
        "options": {},
        "headerParametersJson": "[{\"name\":\"Authorization\",\"value\":\"Bearer REPLACE_WITH_OPENAI_KEY\"},{\"name\":\"Content-Type\",\"value\":\"application/json\"}]",
        "bodyParametersJson": "{\"model\":\"gpt-4o-mini\",\"messages\":[{\"role\":\"system\",\"content\":\"You parse booking messages into a strict JSON: {intent:'book|reschedule|question|cancel', service, date, time, name, email, phone}.\"},{\"role\":\"user\",\"content\":\"Extract JSON only.\\nMessage: {{$json[\\\"Body\\\"] || $json[\\\"text\\\"] || \\\"\\\"}} \"}],\"temperature\":0}"
      },
      "id": "parseLLM",
      "name": "Parse with OpenAI",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [680, 180]
    },
    {
      "parameters": {
        "functionCode": "// Parse OpenAI response into a clean object\nconst resp = items[0].json;\nlet content = \"\";\ntry {\n  content = resp.choices[0].message.content.trim();\n  if (content.startsWith(\"``````")) {}\n  if (content.startsWith(\"```\")) { content = content.replace(/```json|```/g, \"\").trim(); }\n} catch(e) { content = \"{}\"; }\nlet parsed = {};\ntry { parsed = JSON.parse(content); } catch(e){ parsed = {}; }\nreturn [{ json: { ...$json, parsed } }];"
      },
      "id": "codeNormalize",
      "name": "Code: Normalize LLM JSON",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [920, 180]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            { "value1": "={{$json.parsed.intent}}", "operation": "contains", "value2": "book" },
            { "value1": "={{$json.parsed.intent}}", "operation": "contains", "value2": "reschedule" }
          ]
        }
      },
      "id": "ifBookOrReschedule",
      "name": "IF Book/Reschedule?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1160, 180]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.API_BASE_URL}}/appointments",
        "jsonParameters": true,
        "options": {},
        "headerParametersJson": "[{\"name\":\"Authorization\",\"value\":\"={{$json.AUTH_TOKEN}}\"}]",
        "bodyParametersJson": "{\"orgId\":\"={{$json.ORG_ID}}\",\"contact\":{\"first_name\":\"={{$json.parsed.name || \\\"\\\"}}\",\"email\":\"={{$json.parsed.email || \\\"\\\"}}\",\"phone\":\"={{$json.parsed.phone || $json.From || \\\"\\\"}}\"},\"starts_at\":\"={{$json.parsed.date + \\\" \\\" + $json.parsed.time}}\",\"status\":\"pending\",\"service\":\"={{$json.parsed.service || \\\"General\\\"}}\"}"
      },
      "id": "createAppt",
      "name": "Create Appointment via API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1400, 80]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.API_BASE_URL}}/messages/outbound",
        "jsonParameters": true,
        "options": {},
        "headerParametersJson": "[{\"name\":\"Authorization\",\"value\":\"={{$json.AUTH_TOKEN}}\"}]",
        "bodyParametersJson": "{\"orgId\":\"={{$json.ORG_ID}}\",\"channel\":\"sms\",\"to_addr\":\"={{$json.parsed.phone || $json.From}}\",\"body\":\"={{`Thanks! Tentative booking for ${$json.parsed.service||'service'} on ${$json.parsed.date} at ${$json.parsed.time}. Reply C to confirm or R to reschedule.`}}\"}"
      },
      "id": "confirmSMS",
      "name": "Send Confirmation SMS",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1620, 80]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.API_BASE_URL}}/messages/outbound",
        "jsonParameters": true,
        "options": {},
        "headerParametersJson": "[{\"name\":\"Authorization\",\"value\":\"={{$json.AUTH_TOKEN}}\"}]",
        "bodyParametersJson": "{\"orgId\":\"={{$json.ORG_ID}}\",\"channel\":\"sms\",\"to_addr\":\"={{$json.parsed.phone || $json.From}}\",\"body\":\"We've received your message. How can we help?\"}"
      },
      "id": "fallbackSMS",
      "name": "Fallback Reply (Non-booking)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1400, 300]
    }
  ],
  "connections": {
    "Webhook (Inbound)": { "main": [[{ "node": "Set ENV", "type": "main", "index": 0 }]] },
    "Set ENV": { "main": [[{ "node": "Forward to API (/automations/sms_inbound)", "type": "main", "index": 0 }]] },
    "Forward to API (/automations/sms_inbound)": { "main": [[{ "node": "Parse with OpenAI", "type": "main", "index": 0 }]] },
    "Parse with OpenAI": { "main": [[{ "node": "Code: Normalize LLM JSON", "type": "main", "index": 0 }]] },
    "Code: Normalize LLM JSON": { "main": [[{ "node": "IF Book/Reschedule?", "type": "main", "index": 0 }]] },
    "IF Book/Reschedule?": {
      "main": [
        [{ "node": "Create Appointment via API", "type": "main", "index": 0 }],
        [{ "node": "Fallback Reply (Non-booking)", "type": "main", "index": 0 }]
      ]
    },
    "Create Appointment via API": { "main": [[{ "node": "Send Confirmation SMS", "type": "main", "index": 0 }]] }
  },
  "active": false,
  "settings": {},
  "staticData": null,
  "pinData": {}
}